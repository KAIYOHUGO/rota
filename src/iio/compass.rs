//! # D-Bus interface proxy for: `net.hadess.SensorProxy.Compass`
//!
//! This code was generated by `zbus-xmlgen` `4.1.0` from D-Bus introspection data.
//! Source: `iio_sensor_proxy.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
#[proxy(interface = "net.hadess.SensorProxy.Compass", assume_defaults = true)]
trait Compass {
    /// ClaimCompass method
    fn claim_compass(&self) -> zbus::Result<()>;

    /// ReleaseCompass method
    fn release_compass(&self) -> zbus::Result<()>;

    /// CompassHeading property
    #[zbus(property)]
    fn compass_heading(&self) -> zbus::Result<f64>;

    /// HasCompass property
    #[zbus(property)]
    fn has_compass(&self) -> zbus::Result<bool>;
}
